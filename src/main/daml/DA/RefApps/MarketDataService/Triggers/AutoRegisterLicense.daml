--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--


module DA.RefApps.MarketDataService.Triggers.AutoRegisterLicense where

import Daml.Trigger
import DA.Foldable
import DA.Action

import DA.RefApps.MarketDataService.DataLicense
import DA.RefApps.MarketDataService.Roles

automaticLicenseRegistrarTrigger : Trigger ()
automaticLicenseRegistrarTrigger = Trigger
  { initialize = pure ()
  , updateState = \_ -> pure ()
  , rule = autoLicenseRegistrar
  , registeredTemplates = RegisteredTemplates [
      registeredTemplate @DataLicense
    , registeredTemplate @PublisherRole
    ]
  , heartbeat = None
  }

autoLicenseRegistrar : Party -> TriggerA () ()
autoLicenseRegistrar party = do
  licenses <- query @DataLicense
  publisherRoles <- query @PublisherRole
  let
      licensesToRegister = filter (\(_, l) -> l.licenseData.publisher.party == party) licenses
      ourPublisherRoles = filter (\(_, r) -> r.publisher.party == party) publisherRoles

  forA_ licensesToRegister $ \(lCid, l) -> do
    debug $ "Triggered by license: " <> (show l)
    forA_ ourPublisherRoles $ \(rCid, r) -> do
      debug $ "Triggered by role: " <> (show r)
      when (r.operator == l.licenseData.operator) $ do
        debug $ "Automatically registering license: " <> (show l)
        dedupExercise rCid RegisterLicense with licenseId = lCid
